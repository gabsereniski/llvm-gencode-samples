//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 32

	// .globl	soma
                                        // @soma
.visible .func  (.param .b64 func_retval0) soma(
	.param .b64 soma_param_0,
	.param .b64 soma_param_1
)
{
	.reg .s64 	%rd<4>;

// BB#0:                                // %entry
	ld.param.u64 	%rd2, [soma_param_0];
	ld.param.u64 	%rd3, [soma_param_1];
	add.s64 	%rd1, %rd2, %rd3;
// BB#1:                                // %exit
	st.param.b64	[func_retval0+0], %rd1;
	ret;
}

	// .globl	main
.visible .func  (.param .b64 func_retval0) main(

)                                       // @main
{
	.local .align 8 .b8 	__local_depot1[24];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<6>;

// BB#0:                                // %entry
	mov.u32 	%r1, __local_depot1;
	cvta.local.u32 	%SP, %r1;
	mov.u64 	%rd2, 0;
	st.u64 	[%SP+0], %rd2;
	mov.u64 	%rd3, 1;
	st.u64 	[%SP+8], %rd3;
	mov.u64 	%rd4, 2;
	st.u64 	[%SP+16], %rd4;
	ld.u64 	%rd5, [%SP+8];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	soma, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 0
	st.u64 	[%SP+0], %rd1;
// BB#1:                                // %exit
	st.param.b64	[func_retval0+0], %rd1;
	ret;
}

